@inject NavigationManager nm


<div class="card card-md">
    <div class="card-body">
        <h2 class="card-title text-center mb-4">@FormTitle</h2>
        <div class="mb-3">
            <label class="form-label">@MailLabel</label>
            <input type="email" class="@ControlCSS" placeholder="@MailPlaceholder" 
                   @onchange="@( e => { Mail = e.Value.ToSecureString(); })">
        </div>
        <div class="mb-2">
            <label class="form-label">
                @PasswordLabel

                @if (ShowForgotPassword == true)
                {
                    <span class="form-label-description">
                        <a href="@ForgotPasswordLink" target="_blank">@ForgotPasswordLabel</a>
                    </span>
                }

            </label>
            <div class="input-group input-group-flat">
                <input type="password" class="form-control"
                       placeholder="@PasswordPlaceholder" autocomplete="off" 
                       @onchange="@( e => { Pwd = e.Value.ToSecureString(); })">
                <span class="input-group-text bg-white">
                    <i class="fas fa-key"></i>
                </span>
            </div>
        </div>

        @if (ShowRememberMe == true)
            {
                <div class="mb-2">
                    <label class="form-check">
                        <input type="checkbox" class="form-check-input" @onchange="@( e => { RememberMe = Convert.ToBoolean(e.Value); })">
                        <span class="form-check-label">@RemeberMeLabel</span>
                    </label>
                </div>
            }

        <div class="form-footer">
            <button type="button" class="btn btn-primary w-100"
                    @onclick="click">
                @SignInButtonLabel
                </button>
            </div>
        </div>
    </div>



    @code {



        [Parameter]
        public string ControlCSS { get; set; } = "form-control";

        [Parameter]
        public string ButtonCSS { get; set; } = "btn btn-primary";

        // Form
        [Parameter]
        public string FormTitle { get; set; } = "Login to your account";

        // Mail
        [Parameter]
        public string MailLabel { get; set; } = "Email address";

        [Parameter]
        public string MailPlaceholder { get; set; } = "Enter email";

        // Password
        [Parameter]
        public string PasswordLabel { get; set; } = "Password";

        [Parameter]
        public string PasswordPlaceholder { get; set; } = "Password";

        // Remember
        [Parameter]
        public string RemeberMeLabel { get; set; } = "Remember me on this device";

        [Parameter]
        public bool ShowRememberMe { get; set; } = false;

        [Parameter]
        public bool RememberMe { get; set; } = false;

        // Sign Int
        [Parameter]
        public string SignInButtonLabel { get; set; } = "Sign in";

        // Forgot Password
        [Parameter]
        public bool ShowForgotPassword { get; set; } = false;

        [Parameter]
        public string ForgotPasswordLink { get; set; } = "./forgot-password.html";

        [Parameter]
        public string ForgotPasswordLabel { get; set; } = "I forgot password";

        private string Mail = string.Empty;
        private string Pwd = string.Empty;

        [Parameter]
        public EventCallback<AuthentificationFeedback> OnLoginClicked { get; set; }

        private void click()
        {
            AuthentificationFeedback fb = new AuthentificationFeedback();

            try
            {
                if (string.IsNullOrEmpty(Mail))
                {
                    fb.Message = "E-Mail is empty";
                    fb.Status = "FAIL";
                }
                if (string.IsNullOrEmpty(Pwd))
                {
                    fb.Message = "Password is empty";
                    fb.Status = "FAIL";
                }

                // Mail Password 
                fb.Mail = Mail;
                fb.Password = Pwd;

                if (ShowRememberMe == true)
                {
                    // Remember Me 
                    fb.RememberMe = this.RememberMe;
                }

                if (!string.IsNullOrEmpty(Mail) &&
                    !string.IsNullOrEmpty(Pwd))
                {
                    fb.Status = "OK";
                }
            }
            catch (Exception ex)
            {
                fb.Message = "Error: " + ex.Message;
                fb.Status = "FAIL";
            }
            finally
            {
                OnLoginClicked.InvokeAsync(fb);
            }
        }

    }
