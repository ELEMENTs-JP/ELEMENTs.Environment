@inject NavigationManager nm


    <div class="card card-md">
        <div class="card-body">

            <h2 class="card-title text-center mb-4">@FormTitle</h2>
            
            <div class="mb-3">
                <label class="form-label">@MailLabel</label>
                <input type="email" class="@ControlCSS" placeholder="@MailPlaceholder" 
                         @onchange="@( e => { Mail = e.Value.ToSecureString(); })" >
            </div>

            <div class="form-footer">
                <button type="button" class="@ButtonCSS" @onclick="click">@RequestNewPasswordButtonLabel</button>
            </div>
        </div>
    </div>




@code {



    [Parameter]
    public string ControlCSS { get; set; } = "form-control";

    [Parameter]
    public string ButtonCSS { get; set; } = "btn btn-primary w-100";


    // Form 
    [Parameter]
    public string FormTitle { get; set; } = "Request new password";


    // Mail 
    [Parameter]
    public string MailLabel { get; set; } = "Email address";

    [Parameter]
    public string MailPlaceholder { get; set; } = "Enter email";


    // Sign Int
    [Parameter]
    public string RequestNewPasswordButtonLabel { get; set; } = "Request new password";

    private string Mail = string.Empty;

    [Parameter]
    public EventCallback<AuthentificationFeedback> OnNewPasswordRequestClicked { get; set; }

    private void click()
    {
        AuthentificationFeedback fb = new AuthentificationFeedback();

        try
        {
            if (string.IsNullOrEmpty(Mail))
            {
                fb.Message = "Mail is empty";
                fb.Status = "FAIL";
            }

            fb.Mail = Mail;

            if (!string.IsNullOrEmpty(Mail))
            {
                fb.Status = "OK";
            }
        }
        catch (Exception ex)
        {
            fb.Status = "FAIL";
            fb.Message = "Error: " + ex.Message;
        }
        finally
        {
            OnNewPasswordRequestClicked.InvokeAsync(fb);
        }
    }
}
