@inject IJSRuntime JS
@implements IDisposable


<div class="bg-light border rounded p-2"
     style="@( "position: relative; overflow: hidden; ")">
    <div style="position: relative; overflow: hidden;">
        <canvas id="@chartGUID" />
    </div>
</div>


@code {

    private string chartGUID = "chart_pie_" + Guid.NewGuid();


    protected override void OnInitialized()
    {
        base.OnInitialized();
    }
    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        Init(JS);
    }
    protected override async Task OnParametersSetAsync()
    {
        await LoadChart(chartGUID.ToSecureString());
        
        await base.OnParametersSetAsync();
    }
    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    // await LoadChart(chartGUID.ToSecureString());
    //    await base.OnAfterRenderAsync(firstRender);
    //}

    // Parameter
    [Parameter]
    public List<ChartItemDTO> Items { get; set; } = new List<ChartItemDTO>();

    [Parameter]
    public string Title { get; set; } = string.Empty;

    [Parameter]
    public string Legende { get; set; } = string.Empty;
}
