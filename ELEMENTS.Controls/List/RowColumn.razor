
@if (Column != null)
{
    @if (DTO != null)
    {
<div class="@ColumnCSS">

    @if (Column.Property == "ID")
    {
        @DTO.ID.ToSecureString()
    }
    else if (Column.Property == "Title")
    {
        @if (Column.Type == ColumnType.Text)
        {
            @DTO.Title.ToSecureString()
        }
        else if (Column.Type == ColumnType.Link)
        {
            <a class="fw-bold text-dark"
               href="@( "/Item/" + DTO.ItemType.ToSecureString() + "/" + DTO.GUID.ToSecureString() )">
                @DTO.Title.ToSecureString()
            </a>
        }
        else
        {
            @DTO.Title.ToSecureString()
        }
    }
    else
    {
        @if (Column.Type == ColumnType.Text)
        {
            @Value.ToSecureString()
        }
        else if (Column.Type == ColumnType.Percent)
        {
            <div class="row g-0">
                <div class="col">
                    @Value.ToSecureString()
                </div>
                <div class="col-auto">
                    <i class="fas fa-percent"></i>
                </div>
            </div>
        }
        else if (Column.Type == ColumnType.Money)
        {
            <div class="row g-0">
                <div class="col">
                    @Value.ToSecureDecimal().ToSecureString()
                </div>
                <div class="col-auto">
                    <i class="fas fa-money-bill"></i>
                </div>
            </div>
        }
        else if (Column.Type == ColumnType.Integer)
        {
            <div class="row g-0">
                <div class="col">
                    @Value.ToSecureString()
                </div>
            </div>
        }
        else if (Column.Type == ColumnType.Decimal)
        {
            <div class="row g-0">
                <div class="col">
                    @Value.ToSecureDecimal().ToSecureString()
                </div>
            </div>
        }
        else if (Column.Type == ColumnType.Date)
        {
            <div class="row g-0">
                <div class="col-auto pe-1">
                    <i class="far fa-calendar-alt"></i>
                </div>
                <div class="col">
                    @Value.ToSecureString().ToSecureDateTime().ToShortDateString()
                </div>

            </div>
        }
        else if (Column.Type == ColumnType.DateTime)
        {
            <div class="row g-0">
                <div class="col-auto pe-1">
                    <i class="far fa-calendar-alt"></i>
                </div>
                <div class="col">
                    @Value.ToSecureString().ToSecureDateTime().ToShortDateString()
                </div>
                <div class="col-auto pe-1">
                    <i class="far fa-clock"></i>
                </div>
                <div class="col">
                    @Value.ToSecureString().ToSecureDateTime().ToShortTimeString()
                </div>

            </div>
        }
        else if (Column.Type == ColumnType.Time)
        {
            <div class="row g-0">
                <div class="col-auto pe-1">
                    <i class="far fa-clock"></i>
                </div>
                <div class="col">
                    @Value.ToSecureString().ToSecureDateTime().ToShortTimeString();
                </div>

            </div>
        }
        else
        {
            @Value.ToSecureString()
        }
    }

</div>
    }
}

@code {

    [Parameter]
    public string ColumnCSS { get; set; } = "col"; // list-group-flush

    [Parameter]
    public IColumn Column { get; set; }

    [Parameter]
    public IDTO DTO { get; set; }

    [Parameter]
    public string Value { get; set; } = string.Empty;

    [Parameter]
    public int IntValue { get; set; } = 0;

    [Parameter]
    public decimal DecValue { get; set; } = 0;

    [Parameter]
    public DateTime DateTimeValue { get; set; } = DateTime.Now;

    protected override void OnParametersSet()
    {
        try
        {
            if (Column != null)
            {
                if (DTO != null)
                {
                    this.Value = DTO.GetProperty(Column.Property).Value.ToSecureString();
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Fehler: " + ex.Message);
        }

        base.OnParametersSet();
    }
}
