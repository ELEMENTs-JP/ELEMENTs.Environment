

<div class="@ControlCSS">
    <i class="fas fa-arrow-alt-circle-up" style="@( "-ms-transform: rotate("+Value+"deg); transform: rotate("+Value+"deg);" )"></i>
</div>

@code {


    // Parameter 
    /// <summary>
    /// Defines or sets a CSS class that controls the CSS style of the control. The default value is: form-control
    /// </summary>
    [Parameter]
    public string ControlCSS { get; set; } = "";

    /// <summary>
    /// Sets the angle in degrees by which the trend symbol is to be rotated. 
    /// Recommendation: 0 (top) to 180 (bottom) degrees.
    /// </summary>
    [Parameter]
    public int Value { get; set; } = 0;

    /// <summary>
    /// Reacts when the Value property of the control is changed.
    /// Returns the value of the control as a string.
    /// If the Value property is NULL, the event is not thrown.
    /// Info: If intensive operations or accesses to the hardware are implemented with this event,
    /// delays may occur due to the roundtrip in the user interface.
    /// </summary>
    [Parameter]
    public EventCallback<int> ValueChanged { get; set; }
    private async void onValueChanged()
    {
        try
        {
            await ValueChanged.InvokeAsync(Value);
        }
        catch (Exception ex)
        {
            Console.WriteLine("FAIL: " + ex.Message);
        }
    }

}
