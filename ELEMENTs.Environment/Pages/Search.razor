@page "/search"

@using ELEMENTS.Infrastructure
@using System.Linq


<h3 class="h3">Search Elements</h3>

<div class="card mb-3">
    <div class="card-header">
        <div class="row">
            <div class="col-auto px-3">
                <h3 class="h3">Search Elements</h3>
            </div>
            <div class="col-auto px-3">
                <ELEMENTS.Controls.Search.SearchDropDown Title="Search Scope" ControlOrientation="Orientation.Horizontal"
                        SelectionChanged="@( e => { SearchRepo.FilterValue = e.ToSecureString(); })"
                            Items="@( new List<string>() { "Applikationen", "Inhalte", "Einstellungen" })" />
            </div>
            <div class="col">
                <ELEMENTS.Controls.Search.SearchBox 
                    ValueInput="@( e => { SearchRepo.Matchcode = e.ToSecureString(); SearchRepo.SearchItems(); })" />
            </div>
            <div class="col">
                <ELEMENTS.Controls.Search.SearchResultBox Items="@SearchRepo.Items"
                    ValueInput="@( e => { SearchRepo.Matchcode = e.ToSecureString(); SearchRepo.SearchItems(); })" />
            </div>
            <div class="col-auto"></div>
        </div>
    </div>
    <div class="card-body">

        <div class="row">
            <div class="col-auto pe-3">
                <ELEMENTS.Controls.Search.SearchFilter Items="@SearchRepo.Filter" 
                    Title="Titel" FilterChanged="@( e => { SearchRepo.FilterValues(e); })" />

                <div>@SearchRepo.FilterValue</div>
            </div>
            <div class="col ps-3 border-start">
                <ELEMENTS.Controls.Search.SearchResult Items="@SearchRepo.Items" />
            </div>
        </div>
    </div>
</div>


@code
{

    public ISearchRepository SearchRepo { get; set; } = new SearchRepository();

    protected override async Task OnInitializedAsync()
    {
        SearchRepo.Init();
        await base.OnInitializedAsync();
    }
}
