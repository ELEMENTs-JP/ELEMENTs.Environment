@page "/edit"
@page "/edit/{ItemType}"
@page "/edit/{ItemType}/{GUID}"

@inject ISqlDatabaseService sql
@inject IAppRepository app
@using ELEMENTS.Infrastructure


<div class="row">
    <div class="col-7">
        <ELEMENTS.Controls.Layouts.ContainerLayout Title="@Title" SubTitle="@EditRepo.ItemType.Title" PaddingCSS="px-2 py-3">
            <RelatedContent>
                <ELEMENTS.Controls.Collection.AddItem Title="Eintrag hinzufügen"
                                                      FieldHeader="Bezeichnung" Repository="@AddRepo" />
            </RelatedContent>
            <ChildContent>
                <ELEMENTS.Controls.Edit.EditArea InterfaceRepository="@UIRepo"
                                                 EditRepository="@EditRepo">
                </ELEMENTS.Controls.Edit.EditArea>
            </ChildContent>
        </ELEMENTS.Controls.Layouts.ContainerLayout>
    </div>
    <div class="col-5">
        <ELEMENTS.Controls.Item.ItemMetadata DTO="@EditRepo.DTO" />
        <div class="mb-2"></div>
    </div>
</div>



@code {

    [Parameter]
    public string ItemType { get; set; } = "Product";

    [Parameter]
    public string GUID { get; set; }

    private IAddItemRepository AddRepo = new AddItemRepository();
    private IEditItemRepository EditRepo = new EditItemRepository();
    private IUserInterfaceRepository UIRepo { get; set; } = new UserInterfaceRepository();

    private string Title = string.Empty;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        try
        {
            if (AddRepo != null)
            {
                AddRepo.Service = sql;
            }
            if (EditRepo != null)
            {
                EditRepo.Service = sql;

                if (!string.IsNullOrEmpty(GUID))
                {
                    EditRepo.ItemType = app.GetItemTypeByName(this.ItemType);
                    EditRepo.ItemGUID = new Guid(GUID);
                }

                EditRepo.Init();
            }

            // Edit Fields 
            UIRepo = new UserInterfaceRepository();
            UIRepo.ItemType = app.GetItemTypeByName(this.ItemType);
            UIRepo.Init();
        }
        catch (Exception ex)
        {
            System.Diagnostics.Debug.WriteLine("Fehler: " + ex.Message);
        }
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        try
        {
            if (EditRepo != null)
            {
                if (EditRepo.DTO != null)
                {
                    Title = EditRepo.DTO.Title;
                }
            }
        }
        catch (Exception ex)
        {
            System.Diagnostics.Debug.WriteLine("Fehler: " + ex.Message);
        }
    }


}
