@page "/edit"
@page "/edit/{ItemType}"
@page "/edit/{ItemType}/{GUID}"

@inject ISQLiteService sql
@using ELEMENTS.Infrastructure


<ELEMENTS.Controls.Layouts.ContainerLayout Title="@Title" SubTitle="ItemType" PaddingCSS="px-2 py-3">
    <RelatedContent>
        <ELEMENTS.Controls.Collection.AddItem Title="Eintrag hinzufügen"
                                              FieldHeader="Bezeichnung" Repository="@AddRepo" />
    </RelatedContent>
    <ChildContent>
        <ELEMENTS.Controls.Edit.EditArea 
                        InterfaceRepository="@UIRepo" 
                        EditRepository="@EditRepo" >
        </ELEMENTS.Controls.Edit.EditArea>
    </ChildContent>
</ELEMENTS.Controls.Layouts.ContainerLayout>

@code {

    [Parameter]
    public string ItemType { get; set; }

    [Parameter]
    public string GUID { get; set; }

    private IAddItemRepository AddRepo = new AddItemRepository();
    private IEditItemRepository EditRepo = new EditItemRepository();
    private IEditInterfaceRepository UIRepo { get; set; } = new CustomerRepository();

    private string Title = string.Empty;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        if (AddRepo != null)
        {
            AddRepo.Service = sql;
        }
        if (EditRepo != null)
        {
            EditRepo.Service = sql;

            if (!string.IsNullOrEmpty(GUID))
            {
                EditRepo.ItemGUID = new Guid(GUID);
            }

            EditRepo.Init();
        }

        // Edit Fields 
        UIRepo = new CustomerRepository();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (EditRepo != null)
        {
            if (EditRepo.DTO != null)
            {
                Title = EditRepo.DTO.Title;
            }
        }
    }


}
