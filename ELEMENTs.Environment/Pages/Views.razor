@page "/view"
@using ELEMENTS.Infrastructure 

<div class="row">
    <div class="col">
        <h3 class="h1">Container and Views</h3>
    </div>
</div>


<div class="row">

    <div class="col p-3">

        <ELEMENTS.Controls.Layouts.ContainerLayout>
            <ChildContent>
                <h3>Empty Page Layout</h3>
            </ChildContent>
            <RelatedContent>
                <button type="button" class="btn btn-primary btn-sm">hinzufügen...</button>
            </RelatedContent>
        </ELEMENTS.Controls.Layouts.ContainerLayout>
    
    </div>
    <div class="col p-3">

        <ELEMENTS.Controls.Layouts.ContainerLayout Border="true" Rounded="true" 
                                              BackgroundCSS="bg-white" PaddingCSS="p-3"
                                              Title="Card Layout" PreTitle="PreTitle" SubTitle="SubTitle">
            <ChildContent>
                <p>Card Layout</p>
            </ChildContent>
            @*<RelatedContent>
                <button type="button" class="btn btn-primary btn-sm">hinzufügen...</button>
            </RelatedContent>*@
        </ELEMENTS.Controls.Layouts.ContainerLayout>
    </div>
    <div class="col p-3">

        <ELEMENTS.Controls.Layouts.ContainerLayout Border="true" Rounded="true"
                                              BackgroundCSS="bg-white" PaddingCSS="p-2"
                                              Title="Component Layout"  PreTitle="" SubTitle="">
            <ChildContent>
                <p>Component Layout</p>
            </ChildContent>
            <FooterContent>
                <p>Footer</p>
            </FooterContent>
        </ELEMENTS.Controls.Layouts.ContainerLayout>



    </div>
    <div class="col p-3">


        <ELEMENTS.Controls.Layouts.ContainerLayout Border="true" Rounded="true" ControlType="ELEMENTS.Infrastructure.LayoutType.ControlLayout"
                                              BackgroundCSS="bg-white" PaddingCSS="p-1"
                                              Title="Control Layout" PreTitle="" SubTitle="">
            <ChildContent>
                <p>Control Layout</p>
            </ChildContent>
        </ELEMENTS.Controls.Layouts.ContainerLayout>



    </div>

</div>


<div class="row">
 
    <div class="col p-3">

        <ELEMENTS.Controls.Text.Label Value="Alert" />
        <ELEMENTS.Controls.Popup.Alert />

        <ELEMENTS.Controls.Text.Label Value="Success Prompt" />
        <ELEMENTS.Controls.Popup.Prompt />

        <ELEMENTS.Controls.Text.Label Value="Menu Popup" />
        <ELEMENTS.Controls.Popup.MenuPopup />


        <ELEMENTS.Controls.Text.Label Value="Toast" />
        <ELEMENTS.Controls.Popup.Toast @ref="theTOAST" Title="Show Toast" />
        <button class="btn btn-secondary" @onclick="ShowToast">Show Toast</button>

        <ELEMENTS.Controls.Popup.Modal Title="Modal Dialog"
                                       OnCancelClicked="@( e => { Value = e.ToString(); })"
                                       OnOKClicked="@( e => { Value = e.ToString(); })">
            <h1>this is the content of the modal</h1>
        </ELEMENTS.Controls.Popup.Modal>

        <ELEMENTS.Controls.Popup.ModalForm Title="Modal Form" 
                                           OnCancelClicked="@( e => { Value = e.ToString(); })"
                                           OnOKClicked="@( e => { Value = e.ToString(); })">
            <h1>this is the content of the modal</h1>

        </ELEMENTS.Controls.Popup.ModalForm>

        <ELEMENTS.Controls.Text.Label Value="Popup" />
        <ELEMENTS.Controls.Popup.Popup />

        <ELEMENTS.Controls.Text.Label Value="Sidebar" />
        <button type="button" class="btn btn-sm btn-primary" @onclick="ShowSidebar">Partial Sidebar</button>
        <ELEMENTS.Controls.Container.Sidebar @ref="pSidebar"
                                             Position="ELEMENTS.Controls.Container.Sidebar.SideBarPosition.Partial">
            <h1>This is the content of the sidebar</h1>
        </ELEMENTS.Controls.Container.Sidebar>

        <button type="button" class="btn btn-sm btn-primary" @onclick="ShowSidebarLeft">Left Sidebar</button>
        <ELEMENTS.Controls.Container.Sidebar @ref="pSidebarLeft"
                                             Position="ELEMENTS.Controls.Container.Sidebar.SideBarPosition.Left">
            <h1>This is the content of the sidebar</h1>
        </ELEMENTS.Controls.Container.Sidebar>

        <button type="button" class="btn btn-sm btn-primary" @onclick="ShowSidebarTop">Top Sidebar</button>
        <ELEMENTS.Controls.Container.Sidebar @ref="pSidebarTop"
                                             Position="ELEMENTS.Controls.Container.Sidebar.SideBarPosition.Top">
            <h1>This is the content of the sidebar</h1>
        </ELEMENTS.Controls.Container.Sidebar>

        <ELEMENTS.Controls.Text.Label Value="Accordion" />
        <ELEMENTS.Controls.Container.Accordion>
            <ELEMENTS.Controls.Container.AccordionItem Title="Administration">
                <h1>Inhalt 21</h1>
            </ELEMENTS.Controls.Container.AccordionItem>
            <ELEMENTS.Controls.Container.AccordionItem Title="Database">
                <h1>Inhalt 23</h1>
            </ELEMENTS.Controls.Container.AccordionItem>
            <ELEMENTS.Controls.Container.AccordionItem Title="Security">
                <h1>Inhalt 25</h1>
            </ELEMENTS.Controls.Container.AccordionItem>
            <ELEMENTS.Controls.Container.AccordionItem Title="Principal">
                <h1>Inhalt 27</h1>
            </ELEMENTS.Controls.Container.AccordionItem>
        </ELEMENTS.Controls.Container.Accordion>

        <ELEMENTS.Controls.Text.Label Value="Prompt" />
        <ELEMENTS.Controls.Text.Prompt Title="How is Blazor working for you?" Content="Go here..." />

    </div>
    <div class="col p-3">

        <ELEMENTS.Controls.Text.Label Value="Tab Control (horizontal)"  />
        <ELEMENTS.Controls.Container.TabContainer TabOrientation="TabPosition.Top">
            <ELEMENTS.Controls.Container.TabItem Text="Principal">
                <h1>This is the Content of Tab Item 1</h1>
            </ELEMENTS.Controls.Container.TabItem>
            <ELEMENTS.Controls.Container.TabItem Text="Administration">
                <h1>This is the Content of Tab Item 2</h1>
            </ELEMENTS.Controls.Container.TabItem>
            <ELEMENTS.Controls.Container.TabItem Text="Database">
                <h1>This is the Content of Tab Item 2</h1>
            </ELEMENTS.Controls.Container.TabItem>
        </ELEMENTS.Controls.Container.TabContainer>


        <ELEMENTS.Controls.Text.Label Value="Tab Control (vertical)"/>
        <ELEMENTS.Controls.Container.TabContainer TabOrientation="TabPosition.Left">
            <ELEMENTS.Controls.Container.TabItem Text="Principal">
                <h1>This is the Content - Principal</h1>
            </ELEMENTS.Controls.Container.TabItem>
            <ELEMENTS.Controls.Container.TabItem Text="Administration">
                <h1>This is the Content - Administration</h1>
            </ELEMENTS.Controls.Container.TabItem>
            <ELEMENTS.Controls.Container.TabItem Text="Database">
                <h1>This is the Content - Database</h1>
            </ELEMENTS.Controls.Container.TabItem>
            <ELEMENTS.Controls.Container.TabItem Text="Security">
                <h1>This is the Content - Security</h1>
            </ELEMENTS.Controls.Container.TabItem>
        </ELEMENTS.Controls.Container.TabContainer>

      

    </div>
</div>



<ELEMENTS.Controls.Interface.Footer />






@code 
{





    private ELEMENTS.Controls.Popup.Toast theTOAST;
    private async Task ShowToast()
    {
        if (theTOAST != null)
        {
            await theTOAST.ShowToast("Hallo Welt", "this is a message");
        }
    }

    [Parameter]
    public string Value { get; set; } = "Inhalt...";


    private ELEMENTS.Controls.Container.Sidebar pSidebar;
    private async Task ShowSidebar()
    {
        if (pSidebar != null)
        {
            await pSidebar.Show();
        }
    }


    private ELEMENTS.Controls.Container.Sidebar pSidebarLeft;
    private async Task ShowSidebarLeft()
    {
        if (pSidebarLeft != null)
        {
            await pSidebarLeft.Show();
        }
    }


    private ELEMENTS.Controls.Container.Sidebar pSidebarTop;
    private async Task ShowSidebarTop()
    {
        if (pSidebarTop != null)
        {
            await pSidebarTop.Show();
        }
    }
}
