@page "/list"
@page "/list/{ItemType}"
@inject ISqlDatabaseService sql
@using ELEMENTS.Infrastructure

<ELEMENTS.Controls.Layouts.ContainerLayout Title="Items List" SubTitle="@ItemType"
                                           BackgroundCSS="bg-white" Border="true" Rounded="true" PaddingCSS="px-3 py-2" MenuCSS="bg-light border-bottom">
    <MenuContent>
        <div class="row d-flex align-items-center">
            <div class="col">
            </div>
            <div class="col">
                <ELEMENTS.Controls.Search.SearchBox ValueInput="@( e => { ItemsRepo.Matchcode = e; ItemsRepo.Search(); } )" />
            </div>
            <div class="col">

            </div>
        </div>
    </MenuContent>
    <RelatedContent>
        <ELEMENTS.Controls.Collection.AddItem Title="Eintrag hinzufügen"
                                              FieldHeader="Bezeichnung"
                                              Repository="@AddRepo"
                                              OnOKClicked="@( e => { ItemsRepo.Load(); })" />
    </RelatedContent>
    <ChildContent>
        <ELEMENTS.Controls.Collection.ItemsCollection Items="ItemsRepo.Items" Context="IDTO" ControlCSS="" BodyCSS="">
            <RowTemplate>
                <div class="@( "p-2 border-bottom " + "" )">
                    <a href="@( "/edit/" + IDTO.ItemType.ToSecureString() + "/" + IDTO.GUID.ToSecureString() )">
                        <div class="row gx-0">
                            <div class="col-05">@IDTO.ID.ToSecureString()</div>
                            <div class="col">@IDTO.Title.ToSecureString()</div>
                            <div class="col-05"></div>
                        </div>
                    </a>
                </div>
            </RowTemplate>
        </ELEMENTS.Controls.Collection.ItemsCollection>
    </ChildContent>
    <FooterContent>
        <div class="row d-flex align-items-center">
            <div class="col-auto">
                @if (ItemsRepo.ItemCount != 0)
                {
                    <small class="text-muted text-start"><i class="fas fa-hashtag"></i><strong class="ms-1">@ItemsRepo.ItemCount</strong></small>
                }
            </div>
            <div class="col">
                <ELEMENTS.Controls.List.Pagination CurrentPage="@ItemsRepo.CurrentPage" TotalPageCount="@ItemsRepo.TotalPageCount"
                                                   SelectedPage="@( e => { ItemsRepo.CurrentPage = e; ItemsRepo.Load(); } )" />
            </div>
            <div class="col-auto">
                <small class="text-muted text-end"><i class="fas fa-hashtag"></i><strong class="ms-1">@ItemsRepo.PageSize</strong></small>
            </div>
        </div>
    </FooterContent>
</ELEMENTS.Controls.Layouts.ContainerLayout>

@code {

    [Parameter]
    public string ItemType { get; set; } = "Product";

    private IAddItemRepository AddRepo = new AddItemRepository();
    private IItemsRepository ItemsRepo = null;


    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        AddRepo = new AddItemRepository();
        ItemsRepo = new ItemsRepository(sql, new tsp.DEFAULT.SystemProductItemType());

        if (AddRepo != null)
        {
            AddRepo.Service = sql;
        }
        if (ItemsRepo != null)
        {
            ItemsRepo.Service = sql;
        }

        ItemsRepo.Load();
    }

}
