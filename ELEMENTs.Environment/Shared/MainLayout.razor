@inherits LayoutComponentBase
@using System.Linq

<ELEMENTS.Controls.Interface.AppLayout>
    <Sidebar>
        <ELEMENTS.Controls.Navigation.AppTitle Title="ELEMENTs" />
        <ELEMENTS.Controls.Navigation.HierarchicalNavigation 
                Title="Application" Repository="@AppNavigationRepository" />
        <ELEMENTS.Controls.Navigation.HierarchicalNavigation Title="Pages" Repository="@Repository" />
    </Sidebar>


    <Header>
        <div class="row d-flex align-items-center">
            <div class="col">
                <ELEMENTS.Controls.Navigation.WebsiteNavigation Repository="@Repository" />
            </div>
            <div class="col-auto">
                <ELEMENTS.Controls.Popup.MenuPopup Entries="@AdminEntries"
                    Title="Administration" SubTitle="Administration"  />
            </div>
            <div class="col-auto">
                <ELEMENTS.Controls.Security.SecurityMenu Entries="@SecurityEntries" />
            </div>
        </div>
    
    </Header>


    <ChildContent>
        @Body
    </ChildContent>


    <Footer>
        <ELEMENTS.Controls.Interface.Footer DTO="@DTO" />
    </Footer>
</ELEMENTS.Controls.Interface.AppLayout>


@code
{
    [Parameter]
    public INavigationRepository Repository { get; set; }

    [Parameter]
    public INavigationRepository AppNavigationRepository { get; set; }

    private IFooter DTO { get; set; }
    private List<NavigationEntry> Entries { get; set; } = new List<NavigationEntry>();

    public List<MenuEntry> SecurityEntries { get; set; } = new List<MenuEntry>();
    public List<MenuEntry> AdminEntries { get; set; } = new List<MenuEntry>();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        DefaultNavigation();
        BuildSecurityNavigation();
        BuildAdminNavigation();

        BuildAppNavigationRepo();
        BuildNavigationRepository();

        BuildFooter();
    }

    private void BuildAppNavigationRepo()
    {
        try
        {
            AppRepository appRepo = new AppRepository();
            appRepo.Init();
            AppNavigationRepository = appRepo;
        }
        catch (Exception ex)
        {

        }
    }

    private void BuildNavigationRepository()
    {
        try
        {
            NavigationRepository repository = NavigationRepository.Load();

            repository.Title = (string.IsNullOrEmpty(repository.Title)) ? "Navigation" : repository.Title;
            repository.Text = (string.IsNullOrEmpty(repository.Text)) ? "" : repository.Text;

            Repository = repository;
        }
        catch (Exception ex)
        {
            Console.WriteLine("FAIL: " + ex.Message);
        }
    }
    private void BuildSecurityNavigation()
    {
        SecurityEntries.Add(new MenuEntry() { Title = "Anmeldung", Link = "/security/login" });
        SecurityEntries.Add(new MenuEntry() { Title = "Registrierung", Link = "/security/register" });
        SecurityEntries.Add(new MenuEntry() { Title = "Zugang beantragen", Link = "/security/request" });
        SecurityEntries.Add(new MenuEntry() { Title = "Passwort ändern", Link = "/security/change" });
        SecurityEntries.Add(new MenuEntry() { Title = "neues Passwort anfordern", Link = "/security/newpassword" });
        SecurityEntries.Add(new MenuEntry() { Title = "neues Passwort setzen", Link = "/security/setpassword" });
        SecurityEntries.Add(new MenuEntry() { Title = "Berechtigungen setzen", Link = "/security/permission" });
    }

    private void BuildAdminNavigation()
    {
        AdminEntries.Add(new MenuEntry() { Title = "Datenbank", Link = "/database/db" });
        AdminEntries.Add(new MenuEntry() { Title = "Import", Link = "/database/import" });
    }

    private void BuildFooter()
    {
        DTO = new Footer();

        List<FooterGroup> Groups = new List<FooterGroup>();

        List<string> groups = new List<string>() { "Kategorien", "Support", "Community", "Über Uns", "Rechtliches" };

        foreach (string group in groups)
        {
            FooterGroup fg = new FooterGroup() { GroupTitle = group };
            List<FooterLink> links = new List<FooterLink>();
            for (int i = 1; i <= 6; i++)
            {
                FooterLink fl = new FooterLink() { LinkTitle = "Google", LinkUrl = "https://www.google.com" };
                links.Add(fl);
            }
            fg.Links = links;
            Groups.Add(fg);
        }
        DTO.Groups = Groups;
    }

    private void DefaultNavigation()
    {
        // Entries 
        Entries.Add(new NavigationEntry() { Title = "Bootstrap", Link = "bootstrap", Icon = "<i class='fas fa-angle-double-right'></i>" });
        Entries.Add(new NavigationEntry() { Title = "Tabler.IO", Link = "tabler", Icon = "<i class='fas fa-angle-double-right'></i>" });
        Entries.Add(new NavigationEntry() { Title = "Navigation", Link = "/navigation", Icon = "<i class='fas fa-angle-double-right'></i>" });
        Entries.Add(new NavigationEntry() { Title = "Page Layouts", Link = "layouts", Icon = "<i class='fas fa-angle-double-right'></i>" });
        Entries.Add(new NavigationEntry() { Title = "Views and Container", Link = "view", Icon = "<i class='fas fa-angle-double-right'></i>" });
        Entries.Add(new NavigationEntry() { Title = "Analytics", Link = "analytics", Icon = "<i class='fas fa-angle-double-right'></i>" });
        Entries.Add(new NavigationEntry() { Title = "Lists and Media", Link = "lists", Icon = "<i class='fas fa-angle-double-right'></i>" });
        Entries.Add(new NavigationEntry() { Title = "Search UI", Link = "search", Icon = "<i class='fas fa-angle-double-right'></i>" });
        Entries.Add(new NavigationEntry() { Title = "Help UI", Link = "help", Icon = "<i class='fas fa-angle-double-right'></i>" });
        Entries.Add(new NavigationEntry() { Title = "Security", Link = "security", Icon = "<i class='fas fa-angle-double-right'></i>" });
        Entries.Add(new NavigationEntry() { Title = "Terms", Link = "terms", Icon = "<i class='fas fa-angle-double-right'></i>" });

    }
}
